@charset "UTF-8";html,body {font-size: 16px;height: 100%;max-width: 100%;}body {background: #F9F9F9;color: #111;width: 100%;}hr {border-top: 1px solid #ccc;margin: 30px 0;}hr.hr-lg {margin: 60px 0;}hr.hr-sm {margin: 15px 0;}.social-share a {font-size: 30px;}.inline {display: inline-block;}.img-rounded {border-radius: 4px;}.element-invisible {position: absolute !important;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);overflow: hidden;height: 1px;}.element-invisible.element-focusable:active,.element-invisible.element-focusable:focus {position: static !important;clip: auto;overflow: visible;height: auto;}section {padding: 40px 0;}section.section-no-spaced {padding: 0;}section.section-sm {padding: 20px 0;}section.section-lg {padding: 80px 0;}.icon-item {margin-bottom: 20px;}.icon-item i {margin-bottom: 0.3em;font-size: 4.5em;color: #01bdf2;height: 90px;}.icon-item h1, .icon-item h2, .icon-item h3, .icon-item h4, .icon-item h5, .icon-item h5 {margin-top: 0 !important;margin-bottom: 0.2em;}.icon-item h3 {font-size: 1.6em;}h1.icon-item i {font-size: 2em;}aside section {float: left;margin-bottom: 24px;width: 100%;}.bg-primary {background-color: #0695d6 !important;}.bg-success {background-color: #33b560 !important;}.bg-info {background-color: #5bc0de !important;}.bg-danger {background-color: #ef4d3d !important;}.bg-warning {background-color: #fec221 !important;}.bg-gray {background-color: #e9e9e9 !important;}.bg-white {background-color: #fff !important;}.bg-muted {background-color: #767676 !important;}.bg-fucsia {background-color: #ea1d76 !important;}.bg-arandano {background-color: #bd1e61 !important;}.bg-uva {background-color: #873299 !important;}.bg-cielo {background-color: #009dda !important;}.bg-verdin {background-color: #82bc00 !important;}.bg-lima {background-color: #cfde00 !important;}.bg-maiz {background-color: #ffce00 !important;}.bg-tomate {background-color: #ff4338 !important;}.bg-primary h1, .bg-primary h2, .bg-primary h3, .bg-primary h4, .bg-primary h5, .bg-primary h6, .bg-primary .h1, .bg-primary .h2, .bg-primary .h3, .bg-primary .h4, .bg-primary .h5, .bg-primary .h6,.bg-success h1,.bg-success h2,.bg-success h3,.bg-success h4,.bg-success h5,.bg-success h6,.bg-success .h1,.bg-success .h2,.bg-success .h3,.bg-success .h4,.bg-success .h5,.bg-success .h6,.bg-info h1,.bg-info h2,.bg-info h3,.bg-info h4,.bg-info h5,.bg-info h6,.bg-info .h1,.bg-info .h2,.bg-info .h3,.bg-info .h4,.bg-info .h5,.bg-info .h6,.bg-danger h1,.bg-danger h2,.bg-danger h3,.bg-danger h4,.bg-danger h5,.bg-danger h6,.bg-danger .h1,.bg-danger .h2,.bg-danger .h3,.bg-danger .h4,.bg-danger .h5,.bg-danger .h6,.bg-warning h1,.bg-warning h2,.bg-warning h3,.bg-warning h4,.bg-warning h5,.bg-warning h6,.bg-warning .h1,.bg-warning .h2,.bg-warning .h3,.bg-warning .h4,.bg-warning .h5,.bg-warning .h6,.bg-fucsia h1,.bg-fucsia h2,.bg-fucsia h3,.bg-fucsia h4,.bg-fucsia h5,.bg-fucsia h6,.bg-fucsia .h1,.bg-fucsia .h2,.bg-fucsia .h3,.bg-fucsia .h4,.bg-fucsia .h5,.bg-fucsia .h6,.bg-arandano h1,.bg-arandano h2,.bg-arandano h3,.bg-arandano h4,.bg-arandano h5,.bg-arandano h6,.bg-arandano .h1,.bg-arandano .h2,.bg-arandano .h3,.bg-arandano .h4,.bg-arandano .h5,.bg-arandano .h6,.bg-uva h1,.bg-uva h2,.bg-uva h3,.bg-uva h4,.bg-uva h5,.bg-uva h6,.bg-uva .h1,.bg-uva .h2,.bg-uva .h3,.bg-uva .h4,.bg-uva .h5,.bg-uva .h6,.bg-cielo h1,.bg-cielo h2,.bg-cielo h3,.bg-cielo h4,.bg-cielo h5,.bg-cielo h6,.bg-cielo .h1,.bg-cielo .h2,.bg-cielo .h3,.bg-cielo .h4,.bg-cielo .h5,.bg-cielo .h6,.bg-verdin h1,.bg-verdin h2,.bg-verdin h3,.bg-verdin h4,.bg-verdin h5,.bg-verdin h6,.bg-verdin .h1,.bg-verdin .h2,.bg-verdin .h3,.bg-verdin .h4,.bg-verdin .h5,.bg-verdin .h6,.bg-lima h1,.bg-lima h2,.bg-lima h3,.bg-lima h4,.bg-lima h5,.bg-lima h6,.bg-lima .h1,.bg-lima .h2,.bg-lima .h3,.bg-lima .h4,.bg-lima .h5,.bg-lima .h6,.bg-maiz h1,.bg-maiz h2,.bg-maiz h3,.bg-maiz h4,.bg-maiz h5,.bg-maiz h6,.bg-maiz .h1,.bg-maiz .h2,.bg-maiz .h3,.bg-maiz .h4,.bg-maiz .h5,.bg-maiz .h6,.bg-tomate h1,.bg-tomate h2,.bg-tomate h3,.bg-tomate h4,.bg-tomate h5,.bg-tomate h6,.bg-tomate .h1,.bg-tomate .h2,.bg-tomate .h3,.bg-tomate .h4,.bg-tomate .h5,.bg-tomate .h6 {color: #FFF !important;}.bg-primary h1 small,.bg-primary h1 .small, .bg-primary h2 small,.bg-primary h2 .small, .bg-primary h3 small,.bg-primary h3 .small, .bg-primary h4 small,.bg-primary h4 .small, .bg-primary h5 small,.bg-primary h5 .small, .bg-primary h6 small,.bg-primary h6 .small, .bg-primary .h1 small,.bg-primary .h1 .small, .bg-primary .h2 small,.bg-primary .h2 .small, .bg-primary .h3 small,.bg-primary .h3 .small, .bg-primary .h4 small,.bg-primary .h4 .small, .bg-primary .h5 small,.bg-primary .h5 .small, .bg-primary .h6 small,.bg-primary .h6 .small,.bg-success h1 small,.bg-success h1 .small,.bg-success h2 small,.bg-success h2 .small,.bg-success h3 small,.bg-success h3 .small,.bg-success h4 small,.bg-success h4 .small,.bg-success h5 small,.bg-success h5 .small,.bg-success h6 small,.bg-success h6 .small,.bg-success .h1 small,.bg-success .h1 .small,.bg-success .h2 small,.bg-success .h2 .small,.bg-success .h3 small,.bg-success .h3 .small,.bg-success .h4 small,.bg-success .h4 .small,.bg-success .h5 small,.bg-success .h5 .small,.bg-success .h6 small,.bg-success .h6 .small,.bg-info h1 small,.bg-info h1 .small,.bg-info h2 small,.bg-info h2 .small,.bg-info h3 small,.bg-info h3 .small,.bg-info h4 small,.bg-info h4 .small,.bg-info h5 small,.bg-info h5 .small,.bg-info h6 small,.bg-info h6 .small,.bg-info .h1 small,.bg-info .h1 .small,.bg-info .h2 small,.bg-info .h2 .small,.bg-info .h3 small,.bg-info .h3 .small,.bg-info .h4 small,.bg-info .h4 .small,.bg-info .h5 small,.bg-info .h5 .small,.bg-info .h6 small,.bg-info .h6 .small,.bg-danger h1 small,.bg-danger h1 .small,.bg-danger h2 small,.bg-danger h2 .small,.bg-danger h3 small,.bg-danger h3 .small,.bg-danger h4 small,.bg-danger h4 .small,.bg-danger h5 small,.bg-danger h5 .small,.bg-danger h6 small,.bg-danger h6 .small,.bg-danger .h1 small,.bg-danger .h1 .small,.bg-danger .h2 small,.bg-danger .h2 .small,.bg-danger .h3 small,.bg-danger .h3 .small,.bg-danger .h4 small,.bg-danger .h4 .small,.bg-danger .h5 small,.bg-danger .h5 .small,.bg-danger .h6 small,.bg-danger .h6 .small,.bg-warning h1 small,.bg-warning h1 .small,.bg-warning h2 small,.bg-warning h2 .small,.bg-warning h3 small,.bg-warning h3 .small,.bg-warning h4 small,.bg-warning h4 .small,.bg-warning h5 small,.bg-warning h5 .small,.bg-warning h6 small,.bg-warning h6 .small,.bg-warning .h1 small,.bg-warning .h1 .small,.bg-warning .h2 small,.bg-warning .h2 .small,.bg-warning .h3 small,.bg-warning .h3 .small,.bg-warning .h4 small,.bg-warning .h4 .small,.bg-warning .h5 small,.bg-warning .h5 .small,.bg-warning .h6 small,.bg-warning .h6 .small,.bg-fucsia h1 small,.bg-fucsia h1 .small,.bg-fucsia h2 small,.bg-fucsia h2 .small,.bg-fucsia h3 small,.bg-fucsia h3 .small,.bg-fucsia h4 small,.bg-fucsia h4 .small,.bg-fucsia h5 small,.bg-fucsia h5 .small,.bg-fucsia h6 small,.bg-fucsia h6 .small,.bg-fucsia .h1 small,.bg-fucsia .h1 .small,.bg-fucsia .h2 small,.bg-fucsia .h2 .small,.bg-fucsia .h3 small,.bg-fucsia .h3 .small,.bg-fucsia .h4 small,.bg-fucsia .h4 .small,.bg-fucsia .h5 small,.bg-fucsia .h5 .small,.bg-fucsia .h6 small,.bg-fucsia .h6 .small,.bg-arandano h1 small,.bg-arandano h1 .small,.bg-arandano h2 small,.bg-arandano h2 .small,.bg-arandano h3 small,.bg-arandano h3 .small,.bg-arandano h4 small,.bg-arandano h4 .small,.bg-arandano h5 small,.bg-arandano h5 .small,.bg-arandano h6 small,.bg-arandano h6 .small,.bg-arandano .h1 small,.bg-arandano .h1 .small,.bg-arandano .h2 small,.bg-arandano .h2 .small,.bg-arandano .h3 small,.bg-arandano .h3 .small,.bg-arandano .h4 small,.bg-arandano .h4 .small,.bg-arandano .h5 small,.bg-arandano .h5 .small,.bg-arandano .h6 small,.bg-arandano .h6 .small,.bg-uva h1 small,.bg-uva h1 .small,.bg-uva h2 small,.bg-uva h2 .small,.bg-uva h3 small,.bg-uva h3 .small,.bg-uva h4 small,.bg-uva h4 .small,.bg-uva h5 small,.bg-uva h5 .small,.bg-uva h6 small,.bg-uva h6 .small,.bg-uva .h1 small,.bg-uva .h1 .small,.bg-uva .h2 small,.bg-uva .h2 .small,.bg-uva .h3 small,.bg-uva .h3 .small,.bg-uva .h4 small,.bg-uva .h4 .small,.bg-uva .h5 small,.bg-uva .h5 .small,.bg-uva .h6 small,.bg-uva .h6 .small,.bg-cielo h1 small,.bg-cielo h1 .small,.bg-cielo h2 small,.bg-cielo h2 .small,.bg-cielo h3 small,.bg-cielo h3 .small,.bg-cielo h4 small,.bg-cielo h4 .small,.bg-cielo h5 small,.bg-cielo h5 .small,.bg-cielo h6 small,.bg-cielo h6 .small,.bg-cielo .h1 small,.bg-cielo .h1 .small,.bg-cielo .h2 small,.bg-cielo .h2 .small,.bg-cielo .h3 small,.bg-cielo .h3 .small,.bg-cielo .h4 small,.bg-cielo .h4 .small,.bg-cielo .h5 small,.bg-cielo .h5 .small,.bg-cielo .h6 small,.bg-cielo .h6 .small,.bg-verdin h1 small,.bg-verdin h1 .small,.bg-verdin h2 small,.bg-verdin h2 .small,.bg-verdin h3 small,.bg-verdin h3 .small,.bg-verdin h4 small,.bg-verdin h4 .small,.bg-verdin h5 small,.bg-verdin h5 .small,.bg-verdin h6 small,.bg-verdin h6 .small,.bg-verdin .h1 small,.bg-verdin .h1 .small,.bg-verdin .h2 small,.bg-verdin .h2 .small,.bg-verdin .h3 small,.bg-verdin .h3 .small,.bg-verdin .h4 small,.bg-verdin .h4 .small,.bg-verdin .h5 small,.bg-verdin .h5 .small,.bg-verdin .h6 small,.bg-verdin .h6 .small,.bg-lima h1 small,.bg-lima h1 .small,.bg-lima h2 small,.bg-lima h2 .small,.bg-lima h3 small,.bg-lima h3 .small,.bg-lima h4 small,.bg-lima h4 .small,.bg-lima h5 small,.bg-lima h5 .small,.bg-lima h6 small,.bg-lima h6 .small,.bg-lima .h1 small,.bg-lima .h1 .small,.bg-lima .h2 small,.bg-lima .h2 .small,.bg-lima .h3 small,.bg-lima .h3 .small,.bg-lima .h4 small,.bg-lima .h4 .small,.bg-lima .h5 small,.bg-lima .h5 .small,.bg-lima .h6 small,.bg-lima .h6 .small,.bg-maiz h1 small,.bg-maiz h1 .small,.bg-maiz h2 small,.bg-maiz h2 .small,.bg-maiz h3 small,.bg-maiz h3 .small,.bg-maiz h4 small,.bg-maiz h4 .small,.bg-maiz h5 small,.bg-maiz h5 .small,.bg-maiz h6 small,.bg-maiz h6 .small,.bg-maiz .h1 small,.bg-maiz .h1 .small,.bg-maiz .h2 small,.bg-maiz .h2 .small,.bg-maiz .h3 small,.bg-maiz .h3 .small,.bg-maiz .h4 small,.bg-maiz .h4 .small,.bg-maiz .h5 small,.bg-maiz .h5 .small,.bg-maiz .h6 small,.bg-maiz .h6 .small,.bg-tomate h1 small,.bg-tomate h1 .small,.bg-tomate h2 small,.bg-tomate h2 .small,.bg-tomate h3 small,.bg-tomate h3 .small,.bg-tomate h4 small,.bg-tomate h4 .small,.bg-tomate h5 small,.bg-tomate h5 .small,.bg-tomate h6 small,.bg-tomate h6 .small,.bg-tomate .h1 small,.bg-tomate .h1 .small,.bg-tomate .h2 small,.bg-tomate .h2 .small,.bg-tomate .h3 small,.bg-tomate .h3 .small,.bg-tomate .h4 small,.bg-tomate .h4 .small,.bg-tomate .h5 small,.bg-tomate .h5 .small,.bg-tomate .h6 small,.bg-tomate .h6 .small {color: #FFF;}.bg-primary .panel-default:not(:hover) h1, .bg-primary .panel-default:not(:hover) h2, .bg-primary .panel-default:not(:hover) h3, .bg-primary .panel-default:not(:hover) h4, .bg-primary .panel-default:not(:hover) h5, .bg-primary .panel-default:not(:hover) h6, .bg-primary .panel-default:not(:hover) .h1, .bg-primary .panel-default:not(:hover) .h2, .bg-primary .panel-default:not(:hover) .h3, .bg-primary .panel-default:not(:hover) .h4, .bg-primary .panel-default:not(:hover) .h5, .bg-primary .panel-default:not(:hover) .h6,.bg-primary .panel-disabled h1,.bg-primary .panel-disabled h2,.bg-primary .panel-disabled h3,.bg-primary .panel-disabled h4,.bg-primary .panel-disabled h5,.bg-primary .panel-disabled h6,.bg-primary .panel-disabled .h1,.bg-primary .panel-disabled .h2,.bg-primary .panel-disabled .h3,.bg-primary .panel-disabled .h4,.bg-primary .panel-disabled .h5,.bg-primary .panel-disabled .h6,.bg-success .panel-default:not(:hover) h1,.bg-success .panel-default:not(:hover) h2,.bg-success .panel-default:not(:hover) h3,.bg-success .panel-default:not(:hover) h4,.bg-success .panel-default:not(:hover) h5,.bg-success .panel-default:not(:hover) h6,.bg-success .panel-default:not(:hover) .h1,.bg-success .panel-default:not(:hover) .h2,.bg-success .panel-default:not(:hover) .h3,.bg-success .panel-default:not(:hover) .h4,.bg-success .panel-default:not(:hover) .h5,.bg-success .panel-default:not(:hover) .h6,.bg-success .panel-disabled h1,.bg-success .panel-disabled h2,.bg-success .panel-disabled h3,.bg-success .panel-disabled h4,.bg-success .panel-disabled h5,.bg-success .panel-disabled h6,.bg-success .panel-disabled .h1,.bg-success .panel-disabled .h2,.bg-success .panel-disabled .h3,.bg-success .panel-disabled .h4,.bg-success .panel-disabled .h5,.bg-success .panel-disabled .h6,.bg-info .panel-default:not(:hover) h1,.bg-info .panel-default:not(:hover) h2,.bg-info .panel-default:not(:hover) h3,.bg-info .panel-default:not(:hover) h4,.bg-info .panel-default:not(:hover) h5,.bg-info .panel-default:not(:hover) h6,.bg-info .panel-default:not(:hover) .h1,.bg-info .panel-default:not(:hover) .h2,.bg-info .panel-default:not(:hover) .h3,.bg-info .panel-default:not(:hover) .h4,.bg-info .panel-default:not(:hover) .h5,.bg-info .panel-default:not(:hover) .h6,.bg-info .panel-disabled h1,.bg-info .panel-disabled h2,.bg-info .panel-disabled h3,.bg-info .panel-disabled h4,.bg-info .panel-disabled h5,.bg-info .panel-disabled h6,.bg-info .panel-disabled .h1,.bg-info .panel-disabled .h2,.bg-info .panel-disabled .h3,.bg-info .panel-disabled .h4,.bg-info .panel-disabled .h5,.bg-info .panel-disabled .h6,.bg-danger .panel-default:not(:hover) h1,.bg-danger .panel-default:not(:hover) h2,.bg-danger .panel-default:not(:hover) h3,.bg-danger .panel-default:not(:hover) h4,.bg-danger .panel-default:not(:hover) h5,.bg-danger .panel-default:not(:hover) h6,.bg-danger .panel-default:not(:hover) .h1,.bg-danger .panel-default:not(:hover) .h2,.bg-danger .panel-default:not(:hover) .h3,.bg-danger .panel-default:not(:hover) .h4,.bg-danger .panel-default:not(:hover) .h5,.bg-danger .panel-default:not(:hover) .h6,.bg-danger .panel-disabled h1,.bg-danger .panel-disabled h2,.bg-danger .panel-disabled h3,.bg-danger .panel-disabled h4,.bg-danger .panel-disabled h5,.bg-danger .panel-disabled h6,.bg-danger .panel-disabled .h1,.bg-danger .panel-disabled .h2,.bg-danger .panel-disabled .h3,.bg-danger .panel-disabled .h4,.bg-danger .panel-disabled .h5,.bg-danger .panel-disabled .h6,.bg-warning .panel-default:not(:hover) h1,.bg-warning .panel-default:not(:hover) h2,.bg-warning .panel-default:not(:hover) h3,.bg-warning .panel-default:not(:hover) h4,.bg-warning .panel-default:not(:hover) h5,.bg-warning .panel-default:not(:hover) h6,.bg-warning .panel-default:not(:hover) .h1,.bg-warning .panel-default:not(:hover) .h2,.bg-warning .panel-default:not(:hover) .h3,.bg-warning .panel-default:not(:hover) .h4,.bg-warning .panel-default:not(:hover) .h5,.bg-warning .panel-default:not(:hover) .h6,.bg-warning .panel-disabled h1,.bg-warning .panel-disabled h2,.bg-warning .panel-disabled h3,.bg-warning .panel-disabled h4,.bg-warning .panel-disabled h5,.bg-warning .panel-disabled h6,.bg-warning .panel-disabled .h1,.bg-warning .panel-disabled .h2,.bg-warning .panel-disabled .h3,.bg-warning .panel-disabled .h4,.bg-warning .panel-disabled .h5,.bg-warning .panel-disabled .h6,.bg-fucsia .panel-default:not(:hover) h1,.bg-fucsia .panel-default:not(:hover) h2,.bg-fucsia .panel-default:not(:hover) h3,.bg-fucsia .panel-default:not(:hover) h4,.bg-fucsia .panel-default:not(:hover) h5,.bg-fucsia .panel-default:not(:hover) h6,.bg-fucsia .panel-default:not(:hover) .h1,.bg-fucsia .panel-default:not(:hover) .h2,.bg-fucsia .panel-default:not(:hover) .h3,.bg-fucsia .panel-default:not(:hover) .h4,.bg-fucsia .panel-default:not(:hover) .h5,.bg-fucsia .panel-default:not(:hover) .h6,.bg-fucsia .panel-disabled h1,.bg-fucsia .panel-disabled h2,.bg-fucsia .panel-disabled h3,.bg-fucsia .panel-disabled h4,.bg-fucsia .panel-disabled h5,.bg-fucsia .panel-disabled h6,.bg-fucsia .panel-disabled .h1,.bg-fucsia .panel-disabled .h2,.bg-fucsia .panel-disabled .h3,.bg-fucsia .panel-disabled .h4,.bg-fucsia .panel-disabled .h5,.bg-fucsia .panel-disabled .h6,.bg-arandano .panel-default:not(:hover) h1,.bg-arandano .panel-default:not(:hover) h2,.bg-arandano .panel-default:not(:hover) h3,.bg-arandano .panel-default:not(:hover) h4,.bg-arandano .panel-default:not(:hover) h5,.bg-arandano .panel-default:not(:hover) h6,.bg-arandano .panel-default:not(:hover) .h1,.bg-arandano .panel-default:not(:hover) .h2,.bg-arandano .panel-default:not(:hover) .h3,.bg-arandano .panel-default:not(:hover) .h4,.bg-arandano .panel-default:not(:hover) .h5,.bg-arandano .panel-default:not(:hover) .h6,.bg-arandano .panel-dis  $this->autoscalingConfigUrl = $autoscalingConfigUrl;
  }
  public function getAutoscalingConfigUrl()
  {
    return $this->autoscalingConfigUrl;
  }
}

class Google_Service_Manager_DeployState extends Google_Model
{
  protected $internal_gapi_mappings = array(
  );
  public $details;
  public $status;


  public function setDetails($details)
  {
    $this->details = $details;
  }
  public function getDetails()
  {
    return $this->details;
  }
  public function setStatus($status)
  {
    $this->status = $status;
  }
  public function getStatus()
  {
    return $this->status;
  }
}

class Google_Service_Manager_Deployment extends Google_Collection
{
  protected $collection_key = 'overrides';
  protected $internal_gapi_mappings = array(
  );
  public $creationDate;
  public $description;
  protected $modulesType = 'Google_Service_Manager_ModuleStatus';
  protected $modulesDataType = 'map';
  public $name;
  protected $overridesType = 'Google_Service_Manager_ParamOverride';
  protected $overridesDataType = 'array';
  protected $stateType = 'Google_Service_Manager_DeployState';
  protected $stateDataType = '';
  public $templateName;


  public function setCreationDate($creationDate)
  {
    $this->creationDate = $creationDate;
  }
  public function getCreationDate()
  {
    return $this->creationDate;
  }
  public function setDescription($description)
  {
    $this->description = $description;
  }
  public function getDescription()
  {
    return $this->description;
  }
  public function setModules($modules)
  {
    $this->modules = $modules;
  }
  public function getModules()
  {
    return $this->modules;
  }
  public function setName($name)
  {
    $this->name = $name;
  }
  public function getName()
  {
    return $this->name;
  }
  public function setOverrides($overrides)
  {
    $this->overrides = $overrides;
  }
  public function getOverrides()
  {
    return $this->overrides;
  }
  public function setState(Google_Service_Manager_DeployState $state)
  {
    $this->state = $state;
  }
  public function getState()
  {
    return $this->state;
  }
  public function setTemplateName($templateName)
  {
    $this->templateName = $templateName;
  }
  public function getTemplateName()
  {
    return $this->templateName;
  }
}

class Google_Service_Manager_DeploymentModules extends Google_Model
{
}

class Google_Service_Manager_DeploymentsListResponse extends Google_Collection
{
  protected $collection_key = 'resources';
  protected $internal_gapi_mappings = array(
  );
  public $nextPageToken;
  protected $resourcesType = 'Google_Service_Manager_Deployment';
  protected $resourcesDataType = 'array';


  public function setNextPageToken($nextPageToken)
  {
    $this->nextPageToken = $nextPageToken;
  }
  public function getNextPageToken()
  {
    return $this->nextPageToken;
  }
  public function setResources($resources)
  {
    $this->resources = $resources;
  }
  public function getResources()
  {
    return $this->resources;
  }
}

class Google_Service_Manager_DiskAttachment extends Google_Model
{
  protected $internal_gapi_mappings = array(
  );
  public $deviceName;
  public $index;


  public function setDeviceName($deviceName)
  {
    $this->deviceName = $deviceName;
  }
  public function getDeviceName()
  {
    return $this->deviceName;
  }
  public function setIndex($index)
  {
    $this->index = $index;
  }
  public function getIndex()
  {
    return $this->index;
  }
}

class Google_Service_Manager_EnvVariable extends Google_Model
{
  protected $internal_gapi_mappings = array(
  );
  public $hidden;
  public $value;


  public function setHidden($hidden)
  {
    $this->hidden = $hidden;
  }
  public function getHidden()
  {
    return $this->hidden;
  }
  public function setValue($value)
  {
    $this->value = $value;
  }
  public function getValue()
  {
    return $this->value;
  }
}

class Google_Service_Manager_ExistingDisk extends Google_Model
{
  protected $internal_gapi_mappings = array(
  );
  protected $attachmentType = 'Google_Service_Manager_DiskAttachment';
  protected $attachmentDataType = '';
  public $source;


  public function setAttachment(Google_Service_Manager_DiskAttachment $attachment)
  {
    $this->attachment = $attachment;
  }
  public function getAttachment()
  {
    return $this->attachment;
  }
  public function setSource($source)
  {
    $this->source = $source;
  }
  public function getSource()
  {
    return $this->source;
  }
}

class Google_Service_Manager_FirewallModule extends Google_Collection
{
  protected $collection_key = 'targetTags';
  protected $internal_gapi_mappings = array(
  );
  protected $allowedType = 'Google_Service_Manager_AllowedRule';
  protected $allowedDataType = 'array';
  public $description;
  public $network;
  public $sourceRanges;
  public $sourceTags;
  public $targetTags;


  public function setAllowed($allowed)
  {
    $this->allowed = $allowed;
  }
  public function getAllowed()
  {
    return $this->allowed;
  }
  public function setDescription($description)
  {
    $this->description = $description;
  }
  public function getDescription()
  {
    return $this->description;
  }
  public function setNetwork($network)
  {
    $this->network = $network;
  }
  public function getNetwork()
  {
    return $this->network;
  }
  public function setSourceRanges($sourceRanges)
  {
    $this->sourceRanges = $sourceRanges;
  }
  public function getSourceRanges()
  {
    return $this->sourceRanges;
  }
  public function setSourceTags($sourceTags)
  {
    $this->sourceTags = $sourceTags;
  }
  public function getSourceTags()
  {
    return $this->sourceTags;
  }
  public function setTargetTags($targetTags)
  {
    $this->targetTags = $targetTags;
  }
  public function getTargetTags()
  {
    return $this->targetTags;
  }
}

class Google_Service_Manager_FirewallModuleStatus extends Google_Model
{
  protected $internal_gapi_mappings = array(
  );
  public $firewallUrl;


  public function setFirewallUrl($firewallUrl)
  {
    $this->firewallUrl = $firewallUrl;
  }
  public function getFirewallUrl()
  {
    return $this->firewallUrl;
  }
}

class Google_Service_Manager_HealthCheckModule extends Google_Model
{
  protected $internal_gapi_mappings = array(
  );
  public $checkIntervalSec;
  public $description;
  public $healthyThreshold;
  public $host;
  public $path;
  public $port;
  public $timeoutSec;
  public $unhealthyThreshold;


  public function setCheckIntervalSec($checkIntervalSec)
  {
    $this->checkIntervalSec = $checkIntervalSec;
  }
  public function getCheckIntervalSec()
  {
    return $this->checkIntervalSec;
  }
  public function setDescription($description)
  {
    $this->description = $description;
  }
  public function getDescription()
  {
    return $this->description;
  }
  public function setHealthyThreshold($healthyThreshold)
  {
    $this->healthyThreshold = $healthyThreshold;
  }
  public function getHealthyThreshold()
  {
    return $this->healthyThreshold;
  }
  public function setHost($host)
  {
    $this->host = $host;
  }
  public function getHost()
  {
    return $this->host;
  }
  public function setPath($path)
  {
    $this->path = $path;
  }
  public function getPath()
  {
    return $this->path;
  }
  public function setPort($port)
  {
    $this->port = $port;
  }
  public function getPort()
  {
    return $this->port;
  }
  public function setTimeoutSec($timeoutSec)
  {
    $this->timeoutSec = $timeoutSec;
  }
  public function getTimeoutSec()
  {
    return $this->timeoutSec;
  }
  public function setUnhealthyThreshold($unhealthyThreshold)
  {
    $this->unhealthyThreshold = $unhealthyThreshold;
  }
  public function getUnhealthyThreshold()
  {
    return $this->unhealthyThreshold;
  }
}

class Google_Service_Manager_HealthCheckModuleStatus extends Google_Model
{
  protected $internal_gapi_mappings = array(
  );
  public $healthCheckUrl;


  public function setHealthCheckUrl($healthCheckUrl)
  {
    $this->healthCheckUrl = $healthCheckUrl;
  }
  public function getHealthCheckUrl()
  {
    return $this->healthCheckUrl;
  }
}

class Google_Service_Manager_LbModule extends Google_Collection
{
  protected $collection_key = 'targetModules';
  protected $internal_gapi_mappings = array(
  );
  public $description;
  public $healthChecks;
  public $ipAddress;
  public $ipProtocol;
  public $portRange;
  public $sessionAffinity;
  public $targetModules;


  public function setDescription($description)
  {
    $this->description = $description;
  }
  public function getDescription()
  {
    return $this->description;
  }
  public function setHealthChecks($healthChecks)
  {
    $this->healthChecks = $healthChecks;
  }
  public function getHealthChecks()
  {
    return $this->healthChecks;
  }
  public function setIpAddress($ipAddress)
  {
    $this->ipAddress = $ipAddress;
  }
  public function getIpAddress()
  {
    return $this->ipAddress;
  }
  public function setIpProtocol($ipProtocol)
  {
    $this->ipProtocol = $ipProtocol;
  }
  public function getIpProtocol()
  {
    return $this->ipProtocol;
  }
  public function setPortRange($portRange)
  {
    $this->portRange = $portRange;
  }
  public function getPortRange()
  {
    return $this->portRange;
  }
  public function setSessionAffinity($sessionAffinity)
  {
    $this->sessionAffinity = $sessionAffinity;
  }
  public function getSessionAffinity()
  {
    return $this->sessionAffinity;
  }
  public function setTargetModules($targetModules)
  {
    $this->targetModules = $targetModules;
  }
  public function getTargetModules()
  {
    return $this->targetModules;
  }
}

class Google_Service_Manager_LbModuleStatus extends Google_Model
{
  protected $internal_gapi_mappings = array(
  );
  public $forwardingRuleUrl;
  public $targetPoolUrl;


  public function setForwardingRuleUrl($forwardingRuleUrl)
  {
    $this->forwardingRuleUrl = $forwardingRuleUrl;
  }
  public function getForwardingRuleUrl()
  {
    return $this->forwardingRuleUrl;
  }
  public function setTargetPoolUrl($targetPoolUrl)
  {
    $this->targetPoolUrl = $targetPoolUrl;
  }
  public function getTargetPoolUrl()
  {
    return $this->targetPoolUrl;
  }
}

class Google_Service_Manager_Metadata extends Google_Collection
{
  protected $collection_key = 'items';
  protected $internal_gapi_mappings = array(
  );
  public $fingerPrint;
  protected $itemsType = 'Google_Service_Manager_MetadataItem';
  protected $itemsDataType = 'array';


  public function setFingerPrint($fingerPrint)
  {
    $this->fingerPrint = $fingerPrint;
  }
  public function getFingerPrint()
  {
    return $this->fingerPrint;
  }
  public function setItems($items)
  {
    $this->items = $items;
  }
  public function getItems()
  {
    return $this->items;
  }
}

class Google_Service_Manager_MetadataItem extends Google_Model
{
  protected $internal_gapi_mappings = array(
  );
  public $key;
  public $value;


  public function setKey($key)
  {
    $this->key = $key;
  }
  public function getKey()
  {
    return $this->key;
  }
  public function setValue($value)
  {
    $this->value = $value;
  }
  public function getValue()
  {
    return $this->value;
  }
}

class Google_Service_Manager_Module extends Google_Model
{
  protected $internal_gapi_mappings = array(
  );
  protected $autoscalingModuleType = 'Google_Service_Manager_AutoscalingModule';
  protected $autoscalingModuleDataType = '';
  protected $firewallModuleType = 'Google_Service_Manager_FirewallModule';
  protected $firewallModuleDataType = '';
  protected $healthCheckModuleType = 'Google_Service_Manager_HealthCheckModule';
  protected $healthCheckModuleDataType = '';
  protected $lbModuleType = 'Google_Service_Manager_LbModule';
  protected $lbModuleDataType = '';
  protected $networkModuleType = 'Google_Service_Manager_NetworkModule';
  protected $networkModuleDataType = '';
  protected $replicaPoolModuleType = 'Google_Service_Manager_ReplicaPoolModule';
  protected $replicaPoolModuleDataType = '';
  public $type;


  public function setAutoscalingModule(Google_Service_Manager_AutoscalingModule $autoscalingModule)
  {
    $this->autoscalingModule = $autoscalingModule;
  }
  public function getAutoscalingModule()
  {
    return $this->autoscalingModule;
  }
  public function setFirewallModule(Google_Service_Manager_FirewallModule $firewallModule)
  {
    $this->firewallModule = $firewallModule;
  }
  public function getFirewallModule()
  {
    return $this->firewallModule;
  }
  public function setHealthCheckModule(Google_Service_Manager_HealthCheckModule $healthCheckModule)
  {
    $this->healthCheckModule = $healthCheckModule;
  }
  public function getHealthCheckModule()
  {
    return $this->healthCheckModule;
  }
  public function setLbModule(Google_Service_Manager_LbModule $lbModule)
  {
    $this->lbModule = $lbModule;
  }
  public function getLbModule()
  {
    return $this->lbModule;
  }
  public function setNetworkModule(Google_Service_Manager_NetworkModule $networkModule)
  {
    $this->networkModule = $networkModule;
  }
  public function getNetworkModule()
  {
    return $this->networkModule;
  }
  public function setReplicaPoolModule(Google_Service_Manager_ReplicaPoolModule $replicaPoolModule)
  {
    $this->replicaPoolModule = $replicaPoolModule;
  }
  public function getReplicaPoolModule()
  {
    return $this->replicaPoolModule;
  }
  public function setType($type)
  {
    $this->type = $type;
  }
  public function getType()
  {
    return $this->type;
  }
}

class Google_Service_Manager_ModuleStatus extends Google_Model
{
  protected $internal_gapi_mappings = array(
  );
  protected $autoscalingModuleStatusType = 'Google_Service_Manager_AutoscalingModuleStatus';
  protected $autoscalingModuleStatusDataType = '';
  protected $firewallModuleStatusType = 'Google_Service_Manager_FirewallModuleStatus';
  protected $firewallModuleStatusDataType = '';
  protected $healthCheckModuleStatusType = 'Google_Service_Manager_HealthCheckModuleStatus';
  protected $healthCheckModuleStatusDataType = '';
  protected $lbModuleStatusType = 'Google_Service_Manager_LbModuleStatus';
  protected $lbModuleStatusDataType = '';
  protected $networkModuleStatusType = 'Google_Service_Manager_NetworkModuleStatus';
  protected $networkModuleStatusDataType = '';
  protected $replicaPoolModuleStatusType = 'Google_Service_Manager_ReplicaPoolModuleStatus';
  protected $replicaPoolModuleStatusDataType = '';
  protected $stateType = 'Google_Service_Manager_DeployState';
  protected $stateDataType = '';
  public $type;


  public function setAutoscalingModuleStatus(Google_Service_Manager_AutoscalingModuleStatus $autoscalingModuleStatus)
  {
    $this->autoscalingModuleStatus = $autoscalingModuleStatus;
  }
  public function getAutoscalingModuleStatus()
  {
    return $this->autoscalingModuleStatus;
  }
  public function setFirewallModuleStatus(Google_Service_Manager_FirewallModuleStatus $firewallModuleStatus)
  {
    $this->firewallModuleStatus = $firewallModuleStatus;
  }
  public function getFirewallModuleStatus()
  {
    return $this->firewallModuleStatus;
  }
  public function setHealthCheckModuleStatus(Google_Service_Manager_HealthCheckModuleStatus $healthCheckModuleStatus)
  {
    $this->healthCheckModuleStatus = $healthCheckModuleStatus;
  }
  public function getHealthCheckModuleStatus()
  {
    return $this->healthCheckModuleStatus;
  }
  public function setLbModuleStatus(Google_Service_Manager_LbModuleStatus $lbModuleStatus)
  {
    $this->lbModuleStatus = $lbModuleStatus;
  }
  public function getLbModuleStatus()
  {
    return $this->lbModuleStatus;
  }
  public function setNetworkModuleStatus(Google_Service_Manager_NetworkModuleStatus $networkModuleStatus)
  {
    $this->networkModuleStatus = $networkModuleStatus;
  }
  public function getNetworkModuleStatus()
  {
    return $this->networkModuleStatus;
  }
  public function setReplicaPoolModuleStatus(Google_Service_Manager_ReplicaPoolModuleStatus $replicaPoolModuleStatus)
  {
    $this->replicaPoolModuleStatus = $replicaPoolModuleStatus;
  }
  public function getReplicaPoolModuleStatus()
  {
    return $this->replicaPoolModuleStatus;
  }
  public function setState(Google_Service_Manager_DeployState $state)
  {
    $this->state = $state;
  }
  public function getState()
  {
    return $this->state;
  }
  public function setType($type)
  {
    $this->type = $type;
  }
  public function getType()
  {
    return $this->type;
  }
}

class Google_Service_Manager_NetworkInterface extends Google_Collection
{
  protected $collection_key = 'accessConfigs';
  protected $internal_gapi_mappings = array(
  );
  protected $accessConfigsType = 'Google_Service_Manager_AccessConfig';
  protected $accessConfigsDataType = 'array';
  public $name;
  public $network;
  public $networkIp;


  public function setAccessConfigs($accessConfigs)
  {
    $this->accessConfigs = $accessConfigs;
  }
  public function getAccessConfigs()
  {
    return $this->accessConfigs;
  }
  public function setName($name)
  {
    $this->name = $name;
  }
  public function getName()
  {
    return $this->name;
  }
  public function setNetwork($network)
  {
    $this->network = $network;
  }
  public function getNetwork()
  {
    return $this->network;
  }
  public function setNetworkIp($networkIp)
  {
    $this->networkIp = $networkIp;
  }
  public function getNetworkIp()
  {
    return $this->networkIp;
  }
}

class Google_Service_Manager_NetworkModule extends Google_Model
{
  protected $internal_gapi_mappings = array(
        "iPv4Range" => "IPv4Range",
  );
  public $iPv4Range;
  public $description;
  public $gatewayIPv4;


  public function setIPv4Range($iPv4Range)
  {
    $this->iPv4Range = $iPv4Range;
  }
  public function getIPv4Range()
  {
    return $this->iPv4Range;
  }
  public function setDescription($description)
  {
    $this->description = $description;
  }
  public function getDescription()
  {
    return $this->description;
  }
  public function setGatewayIPv4($gatewayIPv4)
  {
    $this->gatewayIPv4 = $gatewayIPv4;
  }
  public function getGatewayIPv4()
  {
    return $this->gatewayIPv4;
  }
}

class Google_Service_Manager_NetworkModuleStatus extends Google_Model
{
  protected $internal_gapi_mappings = array(
  );
  public $networkUrl;


  public function setNetworkUrl($networkUrl)
  {
    $this->networkUrl = $networkUrl;
  }
  public function getNetworkUrl()
  {
    return $this->networkUrl;
  }
}

class Google_Service_Manager_NewDisk extends Google_Model
{
  protected $internal_gapi_mappings = array(
  );
  protected $attachmentType = 'Google_Service_Manager_DiskAttachment';
  protected $attachmentDataType = '';
  public $autoDelete;
  public $boot;
  protected $initializeParamsType = 'Google_Service_Manager_NewDiskInitializeParams';
  protected $initializeParamsDataType = '';


  public function setAttachment(Google_Service_Manager_DiskAttachment $attachment)
  {
    $this->attachment = $attachment;
  }
  public function getAttachment()
  {
    return $this->attachment;
  }
  public function setAutoDelete($autoDelete)
  {
    $this->autoDelete = $autoDelete;
  }
  public function getAutoDelete()
  {
    return $this->autoDelete;
  }
  public function setBoot($boot)
  {
    $this->boot = $boot;
  }
  public function getBoot()
  {
    return $this->boot;
  }
  public function setInitializeParams(Google_Service_Manager_NewDiskInitializeParams $initializeParams)
  {
    $this->initializeParams = $initializeParams;
  }
  public function getInitializeParams()
  {
    return $this->initializeParams;
  }
}

class Google_Service_Manager_NewDiskInitializeParams extends Google_Model
{
  protected $internal_gapi_mappings = array(
  );
  public $diskSizeGb;
  public $diskType;
  public $sourceImage;


  public function setDiskSizeGb($diskSizeGb)
  {
    $this->diskSizeGb = $diskSizeGb;
  }
  public function getDiskSizeGb()
  {
    return $this->diskSizeGb;
  }
  public function setDiskType($diskType)
  {
    $this->diskType = $diskType;
  }
  public function getDiskType()
  {
    return $this->diskType;
  }
  public function setSourceImage($sourceImage)
  {
    $this->sourceImage = $sourceImage;
  }
  public function getSourceImage()
  {
    return $this->sourceImage;
  }
}

class Google_Service_Manager_ParamOverride extends Google_Model
{
  protected $internal_gapi_mappings = array(
  );
  public $path;
  public $value;


  public function setPath($path)
  {
    $this->path = $path;
  }
  public function getPath()
  {
    return $this->path;
  }
  public function setValue($value)
  {
    $this->value = $value;
  }
  public function getValue()
  {
    return $this->value;
  }
}

class Google_Service_Manager_ReplicaPoolModule extends Google_Collection
{
  protected $collection_key = 'healthChecks';
  protected $internal_gapi_mappings = array(
  );
  protected $envVariablesType = 'Google_Service_Manager_EnvVariable';
  protected $envVariablesDataType = 'map';
  public $healthChecks;
  public $numReplicas;
  protected $replicaPoolParamsType = 'Google_Service_Manager_ReplicaPoolParams';
  protected $replicaPoolParamsDataType = '';
  public $resourceView;


  public function setEnvVariables($envVariables)
  {
    $this->envVariables = $envVariables;
  }
  public function getEnvVariables()
  {
    return $this->envVariables;
  }
  public function setHealthChecks($healthChecks)
  {
    $this->healthChecks = $healthChecks;
  }
  public function getHealthChecks()
  {
    return $this->healthChecks;
  }
  public function setNumReplicas($numReplicas)
  {
    $this->numReplicas = $numReplicas;
  }
  public function getNumReplicas()
  {
    return $this->numReplicas;
  }
  public function setReplicaPoolParams(Google_Service_Manager_ReplicaPoolParams $replicaPoolParams)
  {
    $this->replicaPoolParams = $replicaPoolParams;
  }
  public function getReplicaPoolParams()
  {
    return $this->replicaPoolParams;
  }
  public function setResourceView($resourceView)
  {
    $this->resourceView = $resourceView;
  }
  public function getResourceView()
  {
    return $this->resourceView;
  }
}

class Google_Service_Manager_ReplicaPoolModuleEnvVariables extends Google_Model
{
}

class Google_Service_Manager_ReplicaPoolModuleStatus extends Google_Model
{
  protected $internal_gapi_mappings = array(
  );
  public $replicaPoolUrl;
  public $resourceViewUrl;


  public function setReplicaPoolUrl($replicaPoolUrl)
  {
    $this->replicaPoolUrl = $replicaPoolUrl;
  }
  public function getReplicaPoolUrl()
  {
    return $this->replicaPoolUrl;
  }
  public function setResourceViewUrl($resourceViewUrl)
  {
    $this->resourceViewUrl = $resourceViewUrl;
  }
  public function getResourceViewUrl()
  {
    return $this->resourceViewUrl;
  }
}

class Google_Service_Manager_ReplicaPoolParams extends Google_Model
{
  protected $internal_gapi_mappings = array(
  );
  protected $v1beta1Type = 'Google_Service_Manager_ReplicaPoolParamsV1Beta1';
  protected $v1beta1DataType = '';


  public function setV1beta1(Google_Service_Manager_ReplicaPoolParamsV1Beta1 $v1beta1)
  {
    $this->v1beta1 = $v1beta1;
  }
  public function getV1beta1()
  {
    return $this->v1beta1;
  }
}

class Google_Service_Manager_ReplicaPoolParamsV1Beta1 extends Google_Collection
{
  protected $collection_key = 'serviceAccounts';
  protected $internal_gapi_mappings = array(
  );
  public $autoRestart;
  public $baseInstanceName;
  public $canIpForward;
  public $description;
  protected $disksToAttachType = 'Google_Service_Manager_ExistingDisk';
  protected $disksToAttachDataType = 'array';
  protected $disksToCreateType = 'Google_Service_Manager_NewDisk';
  protected $disksToCreateDataType = 'array';
  public $initAction;
  public $machineType;
  protected $metadataType = 'Google_Service_Manager_Metadata';
  protected $metadataDataType = '';
  protected $networkInterfacesType = 'Google_Service_Manager_NetworkInterface';
  protected $networkInterfacesDataType = 'array';
  public $onHostMaintenance;
  protected $serviceAccountsType = 'Google_Service_Manager_ServiceAccount';
  protected $serviceAccountsDataType = 'array';
  protected $tagsType = 'Google_Service_Manager_Tag';
  protected $tagsDataType = '';
  public $zone;


  public function setAutoRestart($autoRestart)
  {
    $this->autoRestart = $autoRestart;
  }
  public function getAutoRestart()
  {
    return $this->autoRestart;
  }
  public function setBaseInstanceName($baseInstanceName)
  {
    $this->baseInstanceName = $baseInstanceName;
  }
  public function getBaseInstanceName()
  {
    return $this->baseInstanceName;
  }
  public function setCanIpForward($canIpForward)
  {
    $this->canIpForward = $canIpForward;
  }
  public function getCanIpForward()
  {
    return $this->canIpForward;
  }
  public function setDescription($description)
  {
    $this->description = $description;
  }
  public function getDescription()
  {
    return $this->description;
  }
  public function setDisksToAttach($disksToAttach)
  {
    $this->disksToAttach = $disksToAttach;
  }
  public function getDisksToAttach()
  {
    return $this->disksToAttach;
  }
  public function setDisksToCreate($disksToCreate)
  {
    $this->disksToCreate = $disksToCreate;
  }
  public function getDisksToCreate()
  {
    return $this->disksToCreate;
  }
  public function setInitAction($initAction)
  {
    $this->initAction = $initAction;
  }
  public function getInitAction()
  {
    return $this->initAction;
  }
  public function setMachineType($machineType)
  {
    $this->machineType = $machineType;
  }
  public function getMachineType()
  {
    return $this->machineType;
  }
  public function setMetadata(Google_Service_Manager_Metadata $metadata)
  {
    $this->metadata = $metadata;
  }
  public function getMetadata()
  {
    return $this->metadata;
  }
  public function setNetworkInterfaces($networkInterfaces)
  {
    $this->networkInterfaces = $networkInterfaces;
  }
  public function getNetworkInterfaces()
  {
    return $this->networkInterfaces;
  }
  public function setOnHostMaintenance($onHostMaintenance)
  {
    $this->onHostMaintenance = $onHostMaintenance;
  }
  public function getOnHostMaintenance()
  {
    return $this->onHostMaintenance;
  }
  public function setServiceAccounts($serviceAccounts)
  {
    $this->serviceAccounts = $serviceAccounts;
  }
  public function getServiceAccounts()
  {
    return $this->serviceAccounts;
  }
  public function setTags(Google_Service_Manager_Tag $tags)
  {
    $this->tags = $tags;
  }
  public function getTags()
  {
    return $this->tags;
  }
  public function setZone($zone)
  {
    $this->zone = $zone;
  }
  public function getZone()
  {
    return $this->zone;
  }
}

class Google_Service_Manager_ServiceAccount extends Google_Collection
{
  protected $collection_key = 'scopes';
  protected $internal_gapi_mappings = array(
  );
  public $email;
  public $scopes;


  public function setEmail($email)
  {
    $this->email = $email;
  }
  public function getEmail()
  {
    return $this->email;
  }
  public function setScopes($scopes)
  {
    $this->scopes = $scopes;
  }
  public function getScopes()
  {
    return $this->scopes;
  }
}

class Google_Service_Manager_Tag extends Google_Collection
{
  protected $collection_key = 'items';
  protected $internal_gapi_mappings = array(
  );
  public $fingerPrint;
  public $items;


  public function setFingerPrint($fingerPrint)
  {
    $this->fingerPrint = $fingerPrint;
  }
  public function getFingerPrint()
  {
    return $this->fingerPrint;
  }
  public function setItems($items)
  {
    $this->items = $items;
  }
  public function getItems()
  {
    return $this->items;
  }
}

class Google_Service_Manager_Template extends Google_Model
{
  protected $internal_gapi_mappings = array(
  );
  protected $actionsType = 'Google_Service_Manager_Action';
  protected $actionsDataType = 'map';
  public $description;
  protected $modulesType = 'Google_Service_Manager_Module';
  protected $modulesDataType = 'map';
  public $name;


  public function setActions($actions)
  {
    $this->actions = $actions;
  }
  public function getActions()
  {
    return $this->actions;
  }
  public function setDescription($description)
  {
    $this->description = $description;
  }
  public function getDescription()
  {
    return $this->description;
  }
  public function setModules($modules)
  {
    $this->modules = $modules;
  }
  public function getModules()
  {
    return $this->modules;
  }
  public function setName($name)
  {
    $this->name = $name;
  }
  public function getName()
  {
    return $this->name;
  }
}

class Google_Service_Manager_TemplateActions extends Google_Model
{
}

class Google_Service_Manager_TemplateModules extends Google_Model
{
}

class Google_Service_Manager_TemplatesListResponse extends Google_Collection
{
  protected $collection_key = 'resources';
  protected $internal_gapi_mappings = array(
  );
  public $nextPageToken;
  protected $resourcesType = 'Google_Service_Manager_Template';
  protected $resourcesDataType = 'array';


  public function setNextPageToken($nextPageToken)
  {
    $this->nextPageToken = $nextPageToken;
  }
  public function getNextPageToken()
  {
    return $this->nextPageToken;
  }
  public function setResources($resources)
  {
    $this->resources = $resources;
  }
  public function getResources()
  {
    return $this->resources;
  }
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   <?php

require_once realpath(dirname(__FILE__) . '/../../../autoload.php');

class Google_Service_Exception extends Google_Exception
{
  /**
   * Optional list of errors returned in a JSON body of an HTTP error response.
   */
  protected $errors = array();

  /**
   * Override default constructor to add ability to set $errors.
   *
   * @param string $message
   * @param int $code
   * @param Exception|null $previous
   * @param [{string, string}] errors List of errors returned in an HTTP
   * response.  Defaults to [].
   */
  public function __construct(
      $message,
      $code = 0,
      Exception $previous = null,
      $errors = array()
  ) {
    if (version_compare(PHP_VERSION, '5.3.0') >= 0) {
      parent::__construct($message, $code, $previous);
    } else {
      parent::__construct($message, $code);
    }

    $this->errors = $errors;
  }

  /**
   * An example of the possible errors returned.
   *
   * {
   *   "domain": "global",
   *   "reason": "authError",
   *   "message": "Invalid Credentials",
   *   "locationType": "header",
   *   "location": "Authorization",
   * }
   *
   * @return [{string, string}] List of errors return in an HTTP response or [].
   */
  public function getErrors()
  {
    return $this->errors;
  }
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             <?php
/*
 * Copyright 2010 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

/**
 * Service definition for Prediction (v1.6).
 *
 * <p>
 * Lets you access a cloud hosted machine learning service that makes it easy to
 * build smart apps</p>
 *
 * <p>
 * For more information about this service, see the API
 * <a href="https://developers.google.com/prediction/docs/developer-guide" target="_blank">Documentation</a>
 * </p>
 *
 * @author Google, Inc.
 */
class Google_Service_Prediction extends Google_Service
{
  /** Manage your data and permissions in Google Cloud Storage. */
  const DEVSTORAGE_FULL_CONTROL =
      "https://www.googleapis.com/auth/devstorage.full_control";
  /** View your data in Google Cloud Storage. */
  const DEVSTORAGE_READ_ONLY =
      "https://www.googleapis.com/auth/devstorage.read_only";
  /** Manage your data in Google Cloud Storage. */
  const DEVSTORAGE_READ_WRITE =
      "https://www.googleapis.com/auth/devstorage.read_write";
  /** Manage your data in the Google Prediction API. */
  const PREDICTION =
      "https://www.googleapis.com/auth/prediction";

  public $hostedmodels;
  public $trainedmodels;
  

  /**
   * Constructs the internal representation of the Prediction service.
   *
   * @param Google_Client $client
   */
  public function __construct(Google_Client $client)
  {
    parent::__construct($client);
    $this->servicePath = 'prediction/v1.6/projects/';
    $this->version = 'v1.6';
    $this->serviceName = 'prediction';

    $this->hostedmodels = new Google_Service_Prediction_Hostedmodels_Resource(
        $this,
        $this->serviceName,
        'hostedmodels',
        array(
          'methods' => array(
            'predict' => array(
              'path' => '{project}/hostedmodels/{hostedModelName}/predict',
              'httpMethod' => 'POST',
              'parameters' => array(
                'project' => array(
                  'location' => 'path',
                  'type' => 'string',
                  'required' => true,
                ),
                'hostedModelName' => array(
                  'location' => 'path',
                  'type' => 'string',
                  'required' => true,
                ),
              ),
            ),
          )
        )
    );
    $this->trainedmodels = new Google_Service_Prediction_Trainedmodels_Resource(
        $this,
        $this->serviceName,
        'trainedmodels',
        array(
          'methods' => array(
            'analyze' => array(
              'path' => '{project}/trainedmodels/{id}/analyze',
              'httpMethod' => 'GET',
              'parameters' => array(
                'project' => array(
                  'location' => 'path',
                  'type' => 'string',
                  'required' => true,
                ),
                'id' => array(
                  'location' => 'path',
                  'type' => 'string',
                  'required' => true,
                ),
              ),
            ),'delete' => array(
              'path' => '{project}/trainedmodels/{id}',
              'httpMethod' => 'DELETE',
              'parameters' => array(
                'project' => array(
                  'location' => 'path',
                  'type' => 'string',
                  'required' => true,
                ),
                'id' => array(
                  'location' => 'path',
                  'type' => 'string',
                  'required' => true,
                ),
              ),
            ),'get' => array(
              'path' => '{project}/trainedmodels/{id}',
              'httpMethod' => 'GET',
              'parameters' => array(
                'project' => array(
                  'location' => 'path',
                  'type' => 'string',
                  'required' => true,
                ),
                'id' => array(
                  'location' => 'path',
                  'type' => 'string',
                  'required' => true,
                ),
              ),
            ),'insert' => array(
              'path' => '{project}/trainedmodels',
              'httpMethod' => 'POST',
              'parameters' => array(
                'project' => array(
                  'location' => 'path',
                  'type' => 'string',
                  'required' => true,
                ),
              ),
            ),'list' => array(
              'path' => '{project}/trainedmodels/list',
              'httpMethod' => 'GET',
              'parameters' => array(
                'project' => array(
                  'location' => 'path',
                  'type' => 'string',
                  'required' => true,
                ),
                'pageToken' => array(
                  'location' => 'query',
                  'type' => 'string',
                ),
                'maxResults' => array(
                  'location' => 'query',
                  'type' => 'integer',
                ),
              ),
            ),'predict' => array(
              'path' => '{project}/trainedmodels/{id}/predict',
              'httpMethod' => 'POST',
              'parameters' => array(
                'project' => array(
                  'location' => 'path',
                  'type' => 'string',
                  'required' => true,
                ),
                'id' => array(
                  'location' => 'path',
                  'type' => 'string',
                  'required' => true,
                ),
              ),
            ),'update' => array(
              'path' => '{project}/trainedmodels/{id}',
              'httpMethod' => 'PUT',
              'parameters' => array(
                'project' => array(
                  'location' => 'path',
                  'type' => 'string',
                  'required' => true,
                ),
                'id' => array(
                  'location' => 'path',
                  'type' => 'string',
                  'required' => true,
                ),
              ),
            ),
          )
        )
    );
  }
}


/**
 * The "hostedmodels" collection of methods.
 * Typical usage is:
 *  <code>
 *   $predictionService = new Google_Service_Prediction(...);
 *   $hostedmodels = $predictionService->hostedmodels;
 *  </code>
 */
class Google_Service_Prediction_Hostedmodels_Resource extends Google_Service_Resource
{

  /**
   * Submit input and request an output against a hosted model.
   * (hostedmodels.predict)
   *
   * @param string $project The project associated with the model.
   * @param string $hostedModelName The name of a hosted model.
   * @param Google_Input $postBody
   * @param array $optParams Optional parameters.
   * @return Google_Service_Prediction_Output
   */
  public function predict($project, $hostedModelName, Google_Service_Prediction_Input $postBody, $optParams = array())
  {
    $params = array('project' => $project, 'hostedModelName' => $hostedModelName, 'postBody' => $postBody);
    $params = array_merge($params, $optParams);
    return $this->call('predict', array($params), "Google_Service_Prediction_Output");
  }
}

/**
 * The "trainedmodels" collection of methods.
 * Typical usage is:
 *  <code>
 *   $predictionService = new Google_Service_Prediction(...);
 *   $trainedmodels = $predictionService->trainedmodels;
 *  </code>
 */
class Google_Service_Prediction_Trainedmodels_Resource extends Google_Service_Resource
{

  /**
   * Get analysis of the model and the data the model was trained on.
   * (trainedmodels.analyze)
   *
   * @param string $project The project associated with the model.
   * @param string $id The unique name for the predictive model.
   * @param array $optParams Optional parameters.
   * @return Google_Service_Prediction_Analyze
   */
  public function analyze($project, $id, $optParams = array())
  {
    $params = array('project' => $project, 'id' => $id);
    $params = array_merge($params, $optParams);
    return $this->call('analyze', array($params), "Google_Service_Prediction_Analyze");
  }

  /**
   * Delete a trained model. (trainedmodels.delete)
   *
   * @param string $project The project associated with the model.
   * @param string $id The unique name for the predictive model.
   * @param array $optParams Optional parameters.
   */
  public function delete($project, $id, $optParams = array())
  {
    $params = array('project' => $project, 'id' => $id);
    $params = array_merge($params, $optParams);
    return $this->call('delete', array($params));
  }

  /**
   * Check training status of your model. (trainedmodels.get)
   *
   * @param string $project The project associated with the model.
   * @param string $id The unique name for the predictive model.
   * @param array $optParams Optional parameters.
   * @return Google_Service_Prediction_Insert2
   */
  public function get($project, $id, $optParams = array())
  {
    $params = array('project' => $project, 'id' => $id);
    $params = array_merge($params, $optParams);
    return $this->call('get', array($params), "Google_Service_Prediction_Insert2");
  }

  /**
   * Train a Prediction API model. (trainedmodels.insert)
   *
   * @param string $project The project associated with the model.
   * @param Google_Insert $postBody
   * @param array $optParams Optional parameters.
   * @return Google_Service_Prediction_Insert2
   */
  public function insert($project, Google_Service_Prediction_Insert $postBody, $optParams = array())
  {
    $params = array('project' => $project, 'postBody' => $postBody);
    $params = array_merge($params, $optParams);
    return $this->call('insert', array($params), "Google_Service_Prediction_Insert2");
  }

  /**
   * List available models. (trainedmodels.listTrainedmodels)
   *
   * @param string $project The project associated with the model.
   * @param array $optParams Optional parameters.
   *
   * @opt_param string pageToken Pagination token.
   * @opt_param string maxResults Maximum number of results to return.
   * @return Google_Service_Prediction_PredictionList
   */
  public function listTrainedmodels($project, $optParams = array())
  {
    $params = array('project' => $project);
    $params = array_merge($params, $optParams);
    return $this->call('list', array($params), "Google_Service_Prediction_PredictionList");
  }

  /**
   * Submit model id and request a prediction. (trainedmodels.predict)
   *
   * @param string $project The project associated with the model.
   * @param string $id The unique name for the predictive model.
   * @param Google_Input $postBody
   * @param array $optParams Optional parameters.
   * @return Google_Service_Prediction_Output
   */
  public function predict($project, $id, Google_Service_Prediction_Input $postBody, $optParams = array())
  {
    $params = array('project' => $project, 'id' => $id, 'postBody' => $postBody);
    $params = array_merge($params, $optParams);
    return $this->call('predict', array($params), "Google_Service_Prediction_Output");
  }

  /**
   * Add new data to a trained model. (trainedmodels.update)
   *
   * @param string $project The project associated with the model.
   * @param string $id The unique name for the predictive model.
   * @param Google_Update $postBody
   * @param array $optParams Optional parameters.
   * @return Google_Service_Prediction_Insert2
   */
  public function update($project, $id, Google_Service_Prediction_Update $postBody, $optParams = array())
  {
    $params = array('project' => $project, 'id' => $id, 'postBody' => $postBody);
    $params = array_merge($params, $optParams);
    return $this->call('update', array($params), "Google_Service_Prediction_Insert2");
  }
}




class Google_Service_Prediction_Analyze extends Google_Collection
{
  protected $collection_key = 'errors';
  protected $internal_gapi_mappings = array(
  );
  protected $dataDescriptionType = 'Google_Service_Prediction_AnalyzeDataDescription';
  protected $dataDescriptionDataType = '';
  public $errors;
  public $id;
  public $kind;
  protected $modelDescriptionType = 'Google_Service_Prediction_AnalyzeModelDescription';
  protected $modelDescriptionDataType = '';
  public $selfLink;


  public function setDataDescription(Google_Service_Prediction_AnalyzeDataDescription $dataDescription)
  {
    $this->dataDescription = $dataDescription;
  }
  public function getDataDescription()
  {
    return $this->dataDescription;
  }
  public function setErrors($errors)
  {
    $this->errors = $errors;
  }
  public function getErrors()
  {
    return $this->errors;
  }
  public function setId($id)
  {
    $this->id = $id;
  }
  public function getId()
  {
    return $this->id;
  }
  public function setKind($kind)
  {
    $this->kind = $kind;
  }
  public function getKind()
  {
    return $this->kind;
  }
  public function setModelDescription(Google_Service_Prediction_AnalyzeModelDescription $modelDescription)
  {
    $this->modelDescription = $modelDescription;
  }
  public function getModelDescription()
  {
    return $this->modelDescription;
  }
  public function setSelfLink($selfLink)
  {
    $this->selfLink = $selfLink;
  }
  public function getSelfLink()
  {
    return $this->selfLink;
  }
}

class Google_Service_Prediction_AnalyzeDataDescription extends Google_Collection
{
  protected $collection_key = 'features';
  protected $internal_gapi_mappings = array(
  );
  protected $featuresType = 'Google_Service_Prediction_AnalyzeDataDescriptionFeatures';
  protected $featuresDataType = 'array';
  protected $outputFeatureType = 'Google_Service_Prediction_AnalyzeDataDescriptionOutputFeature';
  protected $outputFeatureDataType = '';


  public function setFeatures($features)
  {
    $this->features = $features;
  }
  public function getFeatures()
  {
    return $this->features;
  }
  public function setOutputFeature(Google_Service_Prediction_AnalyzeDataDescriptionOutputFeature $outputFeature)
  {
    $this->outputFeature = $outputFeature;
  }
  public function getOutputFeature()
  {
    return $this->outputFeature;
  }
}

class Google_Service_Prediction_AnalyzeDataDescriptionFeatures extends Google_Model
{
  protected $internal_gapi_mappings = array(
  );
  protected $categoricalType = 'Google_Service_Prediction_AnalyzeDataDescriptionFeaturesCategorical';
  protected $categoricalDataType = '';
  public $index;
  protected $numericType = 'Google_Service_Prediction_AnalyzeDataDescriptionFeaturesNumeric';
  protected $numericDataType = '';
  protected $textType = 'Google_Service_Prediction_AnalyzeDataDescriptionFeaturesText';
  protected $textDataType = '';


  public function setCategorical(Google_Service_Prediction_AnalyzeDataDescriptionFeaturesCategorical $categorical)
  {
    $this->categorical = $categorical;
  }
  public function getCategorical()
  {
    return $this->categorical;
  }
  public function setIndex($index)
  {
    $this->index = $index;
  }
  public function getIndex()
  {
    return $this->index;
  }
  public function setNumeric(Google_Service_Prediction_AnalyzeDataDescriptionFeaturesNumeric $numeric)
  {
    $this->numeric = $numeric;
  }
  public function getNumeric()
  {
    return $this->numeric;
  }
  public function setText(Google_Service_Prediction_AnalyzeDataDescriptionFeaturesText $text)
  {
    $this->text = $text;
  }
  public function getText()
  {
    return $this->text;
  }
}

class Google_Service_Prediction_AnalyzeDataDescriptionFeaturesCategorical extends Google_Collection
{
  protected $collection_key = 'values';
  protected $internal_gapi_mappings = array(
  );
  public $count;
  protected $valuesType = 'Google_Service_Prediction_AnalyzeDataDescriptionFeaturesCategoricalValues';
  protected $valuesDataType = 'array';


  public function setCount($count)
  {
    $this->count = $count;
  }
  public function getCount()
  {
    return $this->count;
  }
  public function setValues($values)
  {
    $this->values = $values;
  }
  public function getValues()
  {
    return $this->values;
  }
}

class Google_Service_Prediction_AnalyzeDataDescriptionFeaturesCategoricalValues extends Google_Model
{
  protected $internal_gapi_mappings = array(
  );
  public $count;
  public $value;


  public function setCount($count)
  {
    $this->count = $count;
  }
  public function getCount()
  {
    return $this->count;
  }
  public function setValue($value)
  {
    $this->value = $value;
  }
  public function getValue()
  {
    return $this->value;
  }
}

class Google_Service_Prediction_AnalyzeDataDescriptionFeaturesNumeric extends Google_Model
{
  protected $internal_gapi_mappings = array(
  );
  public $count;
  public $mean;
  public $variance;


  public function setCount($count)
  {
    $this->count = $count;
  }
  public function getCount()
  {
    return $this->count;
  }
  public function setMean($mean)
  {
    $this->mean = $mean;
  }
  public function getMean()
  {
    return $this->mean;
  }
  public function setVariance($variance)
  {
    $this->variance = $variance;
  }
  public function getVariance()
  {
    return $this->variance;
  }
}

class Google_Service_Prediction_AnalyzeDataDescriptionFeaturesText extends Google_Model
{
  protected $internal_gapi_mappings = array(
  );
  public $count;


  public function setCount($count)
  {
    $this->count = $count;
  }
  public function getCount()
  {
    return $this->count;
  }
}

class Google_Service_Prediction_AnalyzeDataDescriptionOutputFeature extends Google_Collection
{
  protected $collection_key = 'text';
  protected $internal_gapi_mappings = array(
  );
  protected $numericType = 'Google_Service_Prediction_AnalyzeDataDescriptionOutputFeatureNumeric';
  protected $numericDataType = '';
  protected $textType = 'Google_Service_Prediction_AnalyzeDataDescriptionOutputFeatureText';
  protected $textDataType = 'array';


  public function setNumeric(Google_Service_Prediction_AnalyzeDataDescriptionOutputFeatureNumeric $numeric)
  {
    $this->numeric = $numeric;
  }
  public function getNumeric()
  {
    return $this->numeric;
  }
  public function setText($text)
  {
    $this->text = $text;
  }
  public function getText()
  {
    return $this->text;
  }
}

class Google_Service_Prediction_AnalyzeDataDescriptionOutputFeatureNumeric extends Google_Model
{
  protected $internal_gapi_mappings = array(
  );
  public $count;
  public $mean;
  public $variance;


  public function setCount($count)
  {
    $this->count = $count;
  }
  public function getCount()
  {
    return $this->count;
  }
  public function setMean($mean)
  {
    $this->mean = $mean;
  }
  public function getMean()
  {
    return $this->mean;
  }
  public function setVariance($variance)
  {
    $this->variance = $variance;
  }
  public function getVariance()
  {
    return $this->variance;
  }
}

class Google_Service_Prediction_AnalyzeDataDescriptionOutputFeatureText extends Google_Model
{
  protected $internal_gapi_mappings = array(
  );
  public $count;
  public $value;


  public function setCount($count)
  {
    $this->count = $count;
  }
  public function getCount()
  {
    return $this->count;
  }
  public function setValue($value)
  {
    $this->value = $value;
  }
  public function getValue()
  {
    return $this->value;
  }
}

class Google_Service_Prediction_AnalyzeErrors extends Google_Model
{
}

class Google_Service_Prediction_AnalyzeModelDescription extends Google_Model
{
  protected $internal_gapi_mappings = array(
  );
  public $confusionMatrix;
  public $confusionMatrixRowTotals;
  protected $modelinfoType = 'Google_Service_Prediction_Insert2';
  protected $modelinfoDataType = '';


  public function setConfusionMatrix($confusionMatrix)
  {
    $this->confusionMatrix = $confusionMatrix;
  }
  public function getConfusionMatrix()
  {
    return $this->confusionMatrix;
  }
  public function setConfusionMatrixRowTotals($confusionMatrixRowTotals)
  {
    $this->confusionMatrixRowTotals = $confusionMatrixRowTotals;
  }
  public function getConfusionMatrixRowTotals()
  {
    return $this->confusionMatrixRowTotals;
  }
  public function setModelinfo(Google_Service_Prediction_Insert2 $modelinfo)
  {
    $this->modelinfo = $modelinfo;
  }
  public function getModelinfo()
  {
    return $this->modelinfo;
  }
}

class Google_Service_Prediction_AnalyzeModelDescriptionConfusionMatrix extends Google_Model
{
}

class Google_Service_Prediction_AnalyzeModelDescriptionConfusionMatrixElement extends Google_Model
{
}

class Google_Service_Prediction_AnalyzeModelDescriptionConfusionMatrixRowTotals extends Google_Model
{
}

class Google_Service_Prediction_Input extends Google_Model
{
  protected $internal_gapi_mappings = array(
  );
  protected $inputType = 'Google_Service_Prediction_InputInput';
  protected $inputDataType = '';


  public function setInput(Google_Service_Prediction_InputInput $input)
  {
    $this->input = $input;
  }
  public function getInput()
  {
    return $this->input;
  }
}

class Google_Service_Prediction_InputInput extends Google_Collection
{
  protected $collection_key = 'csvInstance';
  protected $internal_gapi_mappings = array(
  );
  public $csvInstance;


  public function setCsvInstance($csvInstance)
  {
    $this->csvInstance = $csvInstance;
  }
  public function getCsvInstance()
  {
    return $this->csvInstance;
  }
}

class Google_Service_Prediction_Insert extends Google_Collection
{
  protected $collection_key = 'utility';
  protected $internal_gapi_mappings = array(
  );
  public $id;
  public $modelType;
  public $sourceModel;
  public $storageDataLocation;
  public $storagePMMLLocation;
  public $storagePMMLModelLocation;
  protected $trainingInstancesType = 'Google_Service_Prediction_InsertTrainingInstances';
  protected $trainingInstancesDataType = 'array';
  public $utility;


  public function setId($id)
  {
    $this->id = $id;
  }
  public function getId()
  {
    return $this->id;
  }
  public function setModelType($modelType)
  {
    $this->modelType = $modelType;
  }
  public function getModelType()
  {
    return $this->modelType;
  }
  public function setSourceModel($sourceModel)
  {
    $this->sourceModel = $sourceModel;
  }
  public function getSourceModel()
  {
    return $this->sourceModel;
  }
  public function setStorageDataLocation($storageDataLocation)
  {
    $this->storageDataLocation = $storageDataLocation;
  }
  public function getStorageDataLocation()
  {
    return $this->storageDataLocation;
  }
  public function setStoragePMMLLocation($storagePMMLLocation)
  {
    $this->storagePMMLLocation = $storagePMMLLocation;
  }
  public function getStoragePMMLLocation()
  {
    return $this->storagePMMLLocation;
  }
  public function setStoragePMMLModelLocation($storagePMMLModelLocation)
  {
    $this->storagePMMLModelLocation = $storagePMMLModelLocation;
  }
  public function getStoragePMMLModelLocation()
  {
    return $this->storagePMMLModelLocation;
  }
  public function setTrainingInstances($trainingInstances)
  {
    $this->trainingInstances = $trainingInstances;
  }
  public function getTrainingInstances()
  {
    return $this->trainingInstances;
  }
  public function setUtility($utility)
  {
    $this->utility = $utility;
  }
  public function getUtility()
  {
    return $this->utility;
  }
}

class Google_Service_Prediction_Insert2 extends Google_Model
{
  protected $internal_gapi_mappings = array(
  );
  public $created;
  public $id;
  public $kind;
  protected $modelInfoType = 'Google_Service_Prediction_Insert2ModelInfo';
  protected $modelInfoDataType = '';
  public $modelType;
  public $selfLink;
  public $storageDataLocation;
  public $storagePMMLLocation;
  public $storagePMMLModelLocation;
  public $trainingComplete;
  public $trainingStatus;


  public function setCreated($created)
  {
    $this->created = $created;
  }
  public function getCreated()
  {
    return $this->created;
  }
  public function setId($id)
  {
    $this->id = $id;
  }
  public function getId()
  {
    return $this->id;
  }
  public function setKind($kind)
  {
    $this->kind = $kind;
  }
  public function getKind()
  {
    return $this->kind;
  }
  public function setModelInfo(Google_Service_Prediction_Insert2ModelInfo $modelInfo)
  {
    $this->modelInfo = $modelInfo;
  }
  public function getModelInfo()
  {
    return $this->modelInfo;
  }
  public function setModelType($modelType)
  {
    $this->modelType = $modelType;
  }
  public function getModelType()
  {
    return $this->modelType;
  }
  public function setSelfLink($selfLink)
  {
    $this->selfLink = $selfLink;
  }
  public function getSelfLink()
  {
    return $this->selfLink;
  }
  public function setStorageDataLocation($storageDataLocation)
  {
    $this->storageDataLocation = $storageDataLocation;
  }
  public function getStorageDataLocation()
  {
    return $this->storageDataLocation;
  }
  public function setStoragePMMLLocation($storagePMMLLocation)
  {
    $this->storagePMMLLocation = $storagePMMLLocation;
  }
  public function getStoragePMMLLocation()
  {
    return $this->storagePMMLLocation;
  }
  public function setStoragePMMLModelLocation($storagePMMLModelLocation)
  {
    $this->storagePMMLModelLocation = $storagePMMLModelLocation;
  }
  public function getStoragePMMLModelLocation()
  {
    return $this->storagePMMLModelLocation;
  }
  public function setTrainingComplete($trainingComplete)
  {
    $this->trainingComplete = $trainingComplete;
  }
  public function getTrainingComplete()
  {
    return $this->trainingComplete;
  }
  public function setTrainingStatus($trainingStatus)
  {
    $this->trainingStatus = $trainingStatus;
  }
  public function getTrainingStatus()
  {
    return $this->trainingStatus;
  }
}

class Google_Service_Prediction_Insert2ModelInfo extends Google_Model
{
  protected $internal_gapi_mappings = array(
  );
  public $classWeightedAccuracy;
  public $classificationAccuracy;
  public $meanSquaredError;
  public $modelType;
  public $numberInstances;
  public $numberLabels;


  public function setClassWeightedAccuracy($classWeightedAccuracy)
  {
    $this->classWeightedAccuracy = $classWeightedAccuracy;
  }
  public function getClassWeightedAccuracy()
  {
    return $this->classWeightedAccuracy;
  }
  public function setClassificationAccuracy($classificationAccuracy)
  {
    $this->classificationAccuracy = $classificationAccuracy;
  }
  public function getClassificationAccuracy()
  {
    return $this->classificationAccuracy;
  }
  public function setMeanSquaredError($meanSquaredError)
  {
    $this->meanSquaredError = $meanSquaredError;
  }
  public function getMeanSquaredError()
  {
    return $this->meanSquaredError;
  }
  public function setModelType($modelType)
  {
    $this->modelType = $modelType;
  }
  public function getModelType()
  {
    return $this->modelType;
  }
  public function setNumberInstances($numberInstances)
  {
    $this->numberInstances = $numberInstances;
  }
  public function getNumberInstances()
  {
    return $this->numberInstances;
  }
  public function setNumberLabels($numberLabels)
  {
    $this->numberLabels = $numberLabels;
  }
  public function getNumberLabels()
  {
    return $this->numberLabels;
  }
}

class Google_Service_Prediction_InsertTrainingInstances extends Google_Collection
{
  protected $collection_key = 'csvInstance';
  protected $internal_gapi_mappings = array(
  );
  public $csvInstance;
  public $output;


  public function setCsvInstance($csvInstance)
  {
    $this->csvInstance = $csvInstance;
  }
  public function getCsvInstance()
  {
    return $this->csvInstance;
  }
  public function setOutput($output)
  {
    $this->output = $output;
  }
  public function getOutput()
  {
    return $this->output;
  }
}

class Google_Service_Prediction_InsertUtility extends Google_Model
{
}

class Google_Service_Prediction_Output extends Google_Collection
{
  protected $collection_key = 'outputMulti';
  protected $internal_gapi_mappings = array(
  );
  public $id;
  public $kind;
  public $outputLabel;
  protected $outputMultiType = 'Google_Service_Prediction_OutputOutputMulti';
  protected $outputMultiDataType = 'array';
  public $outputValue;
  public $selfLink;


  public function setId($id)
  {
    $this->id = $id;
  }
  public function getId()
  {
    return $this->id;
  }
  public function setKind($kind)
  {
    $this->kind = $kind;
  }
  public function getKind()
  {
    return $this->kind;
  }
  public function setOutputLabel($outputLabel)
  {
    $this->outputLabel = $outputLabel;
  }
  public function getOutputLabel()
  {
    return $this->outputLabel;
  }
  public function setOutputMulti($outputMulti)
  {
    $this->outputMulti = $outputMulti;
  }
  public function getOutputMulti()
  {
    return $this->outputMulti;
  }
  public function setOutputValue($outputValue)
  {
    $this->outputValue = $outputValue;
  }
  public function getOutputValue()
  {
    return $this->outputValue;
  }
  public function setSelfLink($selfLink)
  {
    $this->selfLink = $selfLink;
  }
  public function getSelfLink()
  {
    return $this->selfLink;
  }
}

class Google_Service_Prediction_OutputOutputMulti extends Google_Model
{
  protected $internal_gapi_mappings = array(
  );
  public $label;
  public $score;


  public function setLabel($label)
  {
    $this->label = $label;
  }
  public function getLabel()
  {
    return $this->label;
  }
  public function setScore($score)
  {
    $this->score = $score;
  }
  public function getScore()
  {
    return $this->score;
  }
}

class Google_Service_Prediction_PredictionList extends Google_Collection
{
  protected $collection_key = 'items';
  protected $internal_gapi_mappings = array(
  );
  protected $itemsType = 'Google_Service_Prediction_Insert2';
  protected $itemsDataType = 'array';
  public $kind;
  public $nextPageToken;
  public $selfLink;


  public function setItems($items)
  {
    $this->items = $items;
  }
  public function getItems()
  {
    return $this->items;
  }
  public function setKind($kind)
  {
    $this->kind = $kind;
  }
  public function getKind()
  {
    return $this->kind;
  }
  public function setNextPageToken($nextPageToken)
  {
    $this->nextPageToken = $nextPageToken;
  }
  public function getNextPageToken()
  {
    return $this->nextPageToken;
  }
  public function setSelfLink($selfLink)
  {
    $this->selfLink = $selfLink;
  }
  public function getSelfLink()
  {
    return $this->selfLink;
  }
}

class Google_Service_Prediction_Update extends Google_Collection
{
  protected $collection_key = 'csvInstance';
  protected $internal_gapi_mappings = array(
  );
  public $csvInstance;
  public $output;


  public function setCsvInstance($csvInstance)
  {
    $this->csvInstance = $csvInstance;
  }
  public function getCsvInstance()
  {
    return $this->csvInstance;
  }
  public function setOutput($output)
  {
    $this->output = $output;
  }
  public function getOutput()
  {
    return $this->output;
  }
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            